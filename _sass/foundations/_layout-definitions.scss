$spacing-x: (
  mobile-s:   1.125rem,
  mobile-m:   1.25rem,
  mobile-l:   2rem,
  tablet:     2.5rem,
  laptop:     2.5rem,
  laptop-l:   3rem,
  desktop:    5rem,
  desktop-hd: 7rem
);

$spacing-y: (
  mobile-s:   1.125rem,
  mobile-m:   1.25rem,
  mobile-l:   2rem,
  tablet:     2.5rem,
  laptop:     2.5rem,
  laptop-l:   3rem,
  desktop:    5rem,
  desktop-hd: 7rem
);

//
// PADDING MIXIN
//––––––––––––––––––––––––––––––––––––––––––––––––––
// @include padding-x(value) {}
@mixin padding-x($value) {

  // If the breakpoint exists in the map.
  @if map-has-key($spacing-x, $value) {

    // Get the padding value.
    $value: map-get($spacing-x, $value);

    // Write left and right values.
    padding-right: $value;
    padding-left:  $value;

  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$value}.';
  }
}

// @include padding-y(value) {}
@mixin padding-y($value) {
  // If the breakpoint exists in the map.
  @if map-has-key($spacing-y, $value) {

    // Get the padding value.
    $value: map-get($spacing-y, $value);

    // Write left and right values.
    padding-top: $value;
    padding-bottom:  $value;

  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$value}.';
  }
}

$breakpoints: (
  mobile-s:   320px,
  mobile-m:   375px,
  mobile-l:   425px,
  tablet:     768px,
  laptop:     1024px,
  laptop-l:   1440px,
  desktop:    1920px,
  desktop-hd: 2560px
);

//
//  MEDIA QUERY
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include mq(breakpoint) {}
@mixin mq($breakpoint, $type: min) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Determine query type.
    @if $type == max {
        $breakpoint-value: $breakpoint-value - 1px;
    }
    // Write the media query.
    @media screen and (#{$type}-width: $breakpoint-value) {
      @content;
    }

  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

//
//  MEDIA QUERY RANGE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include mq-range($lower, $lower) {}
@mixin mq-range($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

  // If one or both of the breakpoints don't exist.
  } @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

$body-bg: $near-white;

html {
  scroll-behavior: smooth;
}

body {
  display: flex;
  flex-direction: column;

  min-height: 100vh;
  margin: 0;
  padding: 0;

  background-color: $body-bg;
  font-family: $font-family;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
}

main {
  flex: 1;
  margin: 4rem 0;
}
